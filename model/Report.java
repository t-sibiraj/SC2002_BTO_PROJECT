package model;

import java.util.HashMap;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * Represents a report generated by an HDB manager summarizing flat bookings.
 * The report maps applicants to their respective flat bookings.
 */
public class Report {

    /** A map of applicants to their flat bookings. */
    private Map<Applicant, FlatBooking> info;

    /**
     * Constructs a new report and prompts the manager to populate it.
     *
     * @param manager The HDB manager generating this report.
     */
    public Report(HDBManager manager) {
        info = new HashMap<>();
        manager.updateReport(this);
    }

    /**
     * Returns the current report data mapping applicants to their bookings.
     *
     * @return A map of applicants and their flat bookings.
     */
    public Map<Applicant, FlatBooking> getInfo() {
        return this.info;
    }

    /**
     * Adds a flat booking to the report.
     *
     * @param booking The flat booking to include in the report.
     */
    public void addInfo(FlatBooking booking) {
        info.put(booking.getApplication().getApplicant(), booking);
    }

    /**
     * Returns a string representation of the report.
     *
     * @return A formatted string listing all applicant-booking entries or a message if empty.
     */
    @Override
    public String toString() {
        if (info.isEmpty()) {
            return "No reports";
        }

        return info.entrySet().stream()
            .map(entry -> "Applicant: " + entry.getKey().getName() + "\n" + entry.getValue().toString())
            .collect(Collectors.joining("\n", "Reports\n", "\n"));
    }
}